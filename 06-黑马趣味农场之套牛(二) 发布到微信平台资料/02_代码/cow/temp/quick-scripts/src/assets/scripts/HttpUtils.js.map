{"version":3,"sources":["assets\\scripts\\HttpUtils.js"],"names":["HttpUtils","request","option","String","undefined","method","toUpperCase","data","formData","key","push","concat","join","url","location","search","length","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","success","response","error","open","setRequestHeader","send","module","exports"],"mappings":";;;;;;IAAMA;;;;;SACFC,UAAA,iBAAQC,MAAR,EAAgB;AACZ,QAAIC,MAAM,CAACD,MAAD,CAAN,KAAmB,iBAAvB,EAA0C,OAAOE,SAAP;AAC1CF,IAAAA,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACG,MAAP,GAAgBH,MAAM,CAACG,MAAP,CAAcC,WAAd,EAAhB,GAA8C,KAA9D;AACAJ,IAAAA,MAAM,CAACK,IAAP,GAAcL,MAAM,CAACK,IAAP,IAAe,EAA7B;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIC,GAAT,IAAgBP,MAAM,CAACK,IAAvB,EAA6B;AACzBC,MAAAA,QAAQ,CAACE,IAAT,CAAc,GAAGC,MAAH,CAAUF,GAAV,EAAe,GAAf,EAAoBP,MAAM,CAACK,IAAP,CAAYE,GAAZ,CAApB,CAAd;AACH;;AACDP,IAAAA,MAAM,CAACK,IAAP,GAAcC,QAAQ,CAACI,IAAT,CAAc,GAAd,CAAd;;AAEA,QAAIV,MAAM,CAACG,MAAP,KAAkB,KAAtB,EAA6B;AACzBH,MAAAA,MAAM,CAACW,GAAP,IAAcC,QAAQ,CAACC,MAAT,CAAgBC,MAAhB,KAA2B,CAA3B,GAA+B,GAAGL,MAAH,CAAU,GAAV,EAAeT,MAAM,CAACK,IAAtB,CAA/B,GAA6D,GAAGI,MAAH,CAAU,GAAV,EAAeT,MAAM,CAACK,IAAtB,CAA3E;AACH;;AAED,QAAIU,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,IAAAA,GAAG,CAACE,YAAJ,GAAmBjB,MAAM,CAACiB,YAAP,IAAuB,MAA1C;;AACAF,IAAAA,GAAG,CAACG,kBAAJ,GAAyB,YAAY;AACjC,UAAIH,GAAG,CAACI,UAAJ,KAAmB,CAAvB,EAA0B;AACtB,YAAIJ,GAAG,CAACK,MAAJ,KAAe,GAAnB,EAAwB;AACpB,cAAIpB,MAAM,CAACqB,OAAP,IAAkB,OAAOrB,MAAM,CAACqB,OAAd,KAA0B,UAAhD,EAA4D;AACxDrB,YAAAA,MAAM,CAACqB,OAAP,CAAeN,GAAG,CAACO,QAAnB;AACH;AACJ,SAJD,MAIO;AACH,cAAItB,MAAM,CAACuB,KAAP,IAAgB,OAAOvB,MAAM,CAACuB,KAAd,KAAwB,UAA5C,EAAwD;AACpDvB,YAAAA,MAAM,CAACuB,KAAP;AACH;AACJ;AACJ;AACJ,KAZD;;AAaAR,IAAAA,GAAG,CAACS,IAAJ,CAASxB,MAAM,CAACG,MAAhB,EAAwBH,MAAM,CAACW,GAA/B,EAAoC,IAApC;;AACA,QAAIX,MAAM,CAACG,MAAP,KAAkB,MAAtB,EAA8B;AAC1BY,MAAAA,GAAG,CAACU,gBAAJ,CAAqB,cAArB,EAAqC,mCAArC;AACH;;AACDV,IAAAA,GAAG,CAACW,IAAJ,CAAS1B,MAAM,CAACG,MAAP,KAAkB,MAAlB,GAA2BH,MAAM,CAACK,IAAlC,GAAyC,IAAlD;AACH;;;;;AAELsB,MAAM,CAACC,OAAP,GAAiB,IAAI9B,SAAJ,EAAjB","sourceRoot":"/","sourcesContent":["class HttpUtils {\r\n    request(option) {\r\n        if (String(option) !== '[object Object]') return undefined\r\n        option.method = option.method ? option.method.toUpperCase() : 'GET'\r\n        option.data = option.data || {}\r\n        var formData = []\r\n        for (var key in option.data) {\r\n            formData.push(''.concat(key, '=', option.data[key]))\r\n        }\r\n        option.data = formData.join('&')\r\n\r\n        if (option.method === 'GET') {\r\n            option.url += location.search.length === 0 ? ''.concat('?', option.data) : ''.concat('&', option.data)\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest()\r\n        xhr.responseType = option.responseType || 'json'\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    if (option.success && typeof option.success === 'function') {\r\n                        option.success(xhr.response)\r\n                    }\r\n                } else {\r\n                    if (option.error && typeof option.error === 'function') {\r\n                        option.error()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        xhr.open(option.method, option.url, true)\r\n        if (option.method === 'POST') {\r\n            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n        }\r\n        xhr.send(option.method === 'POST' ? option.data : null)\r\n    }\r\n}\r\nmodule.exports = new HttpUtils();"]}